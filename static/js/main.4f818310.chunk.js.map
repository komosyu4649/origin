{"version":3,"sources":["components/CommentList/CommentList.jsx","components/Button/Button.jsx","components/Form/Form.jsx","App.js","index.js"],"names":["CommentList","props","commentList","comments","map","comment","index","key","className","Button","onClickHandler","bind","this","onClick","children","React","Component","Form","state","body","handleChange","sendBodyToParent","event","field","target","name","setState","value","trim","onSubmit","alert","cols","rows","onChange","App","addComment","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAsBeA,G,YAlBK,SAACC,GAAW,IAEtBC,EADeD,EAAbE,SACqBC,KAAI,SAACC,EAASC,GACvC,OACI,wBAAIC,IAAKD,EAAOE,UAAU,oBACrBH,MAKb,OACI,6BACI,4BAAKH,M,OCcFO,G,8DA1BX,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IAEDS,eAAiB,EAAKA,eAAeC,KAApB,gBAHP,E,6DAOyB,oBAA9BC,KAAKX,MAAMS,gBACjBE,KAAKX,MAAMS,mB,+BAKf,OACI,0BACCF,UAAU,oBACVK,QAASD,KAAKF,gBAETE,KAAKX,MAAMa,c,GAnBRC,IAAMC,YC0DZC,E,kDAvDX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IAEDiB,MAAQ,CACTC,KAAM,IAGV,EAAKC,aAAe,EAAKA,aAAaT,KAAlB,gBACpB,EAAKU,iBAAmB,EAAKA,iBAAiBV,KAAtB,gBART,E,yDAWNW,GACT,IAAMC,EAAQD,EAAME,OAAOC,KAC3Bb,KAAKc,SAAL,eACKH,EAAOD,EAAME,OAAOG,U,yCAKzB,IAAMR,EAAOP,KAAKM,MAAMC,KAAKS,OACzBT,GAK8B,oBAAxBP,KAAKX,MAAM4B,UACjBjB,KAAKX,MAAM4B,SAASV,GAGxBP,KAAKc,SAAS,CACVP,KAAM,MATNW,MAAM,wE,+BAeV,OACI,6BACI,yBAAKtB,UAAU,iBACX,8BACIiB,KAAK,OACLM,KAAK,KACLC,KAAK,IACLL,MAAOf,KAAKM,MAAMC,KAClBc,SAAUrB,KAAKQ,gBAGvB,kBAAC,EAAD,CAAQV,eAAgBE,KAAKS,kBAA7B,6C,GAhDGN,IAAMC,WCmDVkB,E,kDAjDb,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAEDiB,MAAQ,CACXf,SAAU,IAEZ,EAAKgC,WAAa,EAAKA,WAAWxB,KAAhB,gBAND,E,uDASRN,GACTO,KAAKc,SAAS,CACZvB,SAAS,GAAD,mBAAMS,KAAKM,MAAMf,UAAjB,CAA2BE,Q,+BAI7B,IAAD,OACP,OACE,yBAAKG,UAAU,OACb,kBAAC,EAAD,CAAMqB,SAAU,SAACV,GACfiB,QAAQC,IAAI,WAAYlB,GACxB,EAAKgB,WAAWhB,MAElB,kBAAC,EAAD,CAAahB,SAAUS,KAAKM,MAAMf,gB,GAvBxBY,IAAMC,WCDxBsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4f818310.chunk.js","sourcesContent":["import React from 'react';\nimport './CommentList.css';\n\n\nconst CommentList = (props) => {\n    const { comments } = props;\n    const commentList = comments.map((comment, index) => {\n        return (\n            <li key={index} className=\"CommentList-Item\">\n                {comment}\n            </li>\n        );\n    });\n\n    return (\n        <div>\n            <ul>{commentList}</ul>\n        </div>\n    );\n}\n\n\nexport default CommentList;","import React from 'react';\nimport './Button.css';\n\nclass Button extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onClickHandler = this.onClickHandler.bind(this);\n    }\n\nonClickHandler() {\n        if(typeof this.props.onClickHandler === 'function') {\n            this.props.onClickHandler();\n        }\n    }\n\n    render() {\n        return (\n            <span\n             className=\"Buttton-container\"\n             onClick={this.onClickHandler}\n             >\n                 {this.props.children}\n             </span>\n        );\n    }\n\n}\n\n\nexport default Button;","import React from 'react';\nimport './Form.css';\nimport Button from '../Button/Button'\n\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            body: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.sendBodyToParent = this.sendBodyToParent.bind(this);\n    }\n\n    handleChange(event) {\n        const field = event.target.name;\n        this.setState({\n            [field]:event.target.value\n        })\n    }\n\n    sendBodyToParent() {\n        const body = this.state.body.trim();\n        if(!body) {\n            alert('何も入力されていません');\n            return;\n        }\n\n        if(typeof this.props.onSubmit === 'function') {\n            this.props.onSubmit(body);\n        }\n\n        this.setState({\n            body: ''\n        });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"Form-textarea\">\n                    <textarea\n                        name=\"body\" \n                        cols=\"30\" \n                        rows=\"5\"\n                        value={this.state.body}\n                        onChange={this.handleChange}\n                     ></textarea>\n                </div>\n                <Button onClickHandler={this.sendBodyToParent}>\n                    コメントする\n                </Button>\n            </div>\n        );\n    }\n};\n\nexport default Form;","import React from 'react';\nimport './App.css';\n// import Button from './components/Button/Button';\nimport CommentList from './components/CommentList/CommentList';\nimport Form from './components/Form/Form';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      comments: []\n    };\n    this.addComment = this.addComment.bind(this);\n  }\n\n  addComment(comment) {\n    this.setState({\n      comments: [...this.state.comments, comment]\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form onSubmit={(body) => {\n          console.log('body? : ', body);\n          this.addComment(body);\n        }} />\n        <CommentList comments={this.state.comments} />\n      </div>\n    );\n  }\n}\n\n// function App() {\n//   const comments = [\n//     'test1',\n//     'test2',\n//     'test3',\n//   ];\n\n//   return (\n//     <div className=\"App\">\n//       <Form onSubmit={(body) => {\n//         console.log('body? : ', body);\n//       }} />\n//       {/* <Button onClickHandler={() => {\n//         console.log('クリックした！');\n//       }}>コメントする\n//       </Button>  */}\n//       <CommentList comments={comments} />\n//     </div>\n//   );\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}